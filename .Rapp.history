country.df <- formatShp(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
country.df <- readOGR(file.path(path.ch, "ch-country.json"), country.layers[1])
str(country.df)
country.df <- fortify(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 2) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
country.layers
ch.communes + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
library(swiMap)
?getPathShp
require(rgdal)#
require(rgeos)#
require(ggplot2)
path.ch <- getPathShp('CH')#
ch <- readOGR(path.ch, layer = 'municipalities-without-lakes')#
ch.df <- formatShp(ch)#
# plot swiss commune map#
ch.communes <- ggplot(ch.df, aes(x = long, y = lat, group = group)) + geom_polygon(size = 0.01, aes(fill = GEMNAME)) +#
theme_minimal() + theme(legend.position = "none", panel.grid = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(), axis.text = element_blank())#
ch.communes#
# add the lake and country contours#
lake.df <- formatShp(readOGR(path.ch, layer = "lakes"))#
country.layers <- ogrListLayers(file.path(path.ch, "ch-country.json"))#
country.df <- fortify(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
h.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1)
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1)
ogrListLayers(path.ch)
library(swiMap)
system.file("extdata", package="swiMap")
dir(system.file("extdata", package="swiMap"))
dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt")
?dir
dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  read.csv(data.path, sep ="\t")
?read.csv
data <- read.csv(data.path, sep ="\t",  header = FALSE)
str(data)
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  data <- read.csv(data.path, sep ="\t",  header = FALSE, stringsAsFactors = F)
str(data)
head(data)
colnames(data) <- c('GHSTNR', 'BHSTNR', 'KTKZ', 'GBFSNR', 'GNAME', 'GNAMK', 'GARTE', #
                      'GSTAT', 'GINIMUT', 'GINIART', 'GINIDAT', 'GFINMUT', 'GFINART', #
                      'GFINDAT','GMUTDAT')
str(data)
asDate(data$GINIDAT)
as.Date(data$GINIDAT)
as.date
?as.Date
as.Date(data$GINIDAT, format = "%d.%m.%Y")
str(data)
as.Date(data$GINIDAT, format = "%d.%m.%Y")
data$GINIDAT <- as.Date(data$GINIDAT, format = "%d.%m.%Y")#
  data$GFINDAT <- as.Date(data$GFINDAT, format = "%d.%m.%Y")#
  data$GMUTDAT <- as.Date(data$GMUTDAT, format = "%d.%m.%Y")
str(data)
min(data$GINIDAT)
str(min(data$GINIDAT))
as.Date("1960-01-01")
today()
date()
?date()
Sys.Date()
"2012-01-01"
Sys.Date()
start <- as.Date(start)#
  end <- as.Date(end)
start
start<- "2012-01-01"
end <- Sys.Date()
start <- as.Date(start)#
  end <- as.Date(end)
start
end
str(data)
data$GFINDAT
data$GFINDAT >= start
which(data$GFINDAT >= start)
data[which(data$GFINDAT >= start),]
?encoding
?Encoding
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  data <- read.csv(data.path, sep ="\t",  header = FALSE, stringsAsFactors = F, encoding = "latin1")#
  # colnames#
  colnames(data) <- c('GHSTNR', 'BHSTNR', 'KTKZ', 'GBFSNR', 'GNAME', 'GNAMK', 'GARTE', #
                      'GSTAT', 'GINIMUT', 'GINIART', 'GINIDAT', 'GFINMUT', 'GFINART', #
                      'GFINDAT','GMUTDAT')#
  # tranform to dates#
  data$GINIDAT <- as.Date(data$GINIDAT, format = "%d.%m.%Y")#
  data$GFINDAT <- as.Date(data$GFINDAT, format = "%d.%m.%Y")#
  data$GMUTDAT <- as.Date(data$GMUTDAT, format = "%d.%m.%Y")
data[which(data$GFINDAT >= start),]
data[which(data$GFINDAT >= start & data$GINIART == 24),]
data[which(data$GFINDAT >= start & data$GINIART == 26),]
data[which(data$GFINDAT >= start || data$GINIDAT >= start),]
data[which(data$GFINDAT >= start | data$GINIDAT >= start),]
data[which(data$GFINDAT >= start & data$GINIART == 26),]
start
data[which(data$GFINDAT >= start & data$GINIART == 26),'GFINMUT']
data$GFINMUT %in% data[which(data$GFINDAT >= start & data$GINIART == 26),'GINITMUT']
which(data$GFINMUT %in% data[which(data$GFINDAT >= start & data$GINIART == 26),'GINITMUT'])
data[which(data$GFINDAT >= start & data$GINIART == 26),'GFINMUT']
data[which(data$GFINDAT >= start & data$GINIART == 26),]
data[which(data$GFINDAT >= start & data$GINIART == 24),]
which(data$GINIMUT == 3404)
data[which(data$GINIMUT == 3404),]
data[which(data$GFINDAT >= start | data$GINIDAT >= start),]
data[which((data$GFINDAT >= start | data$GINIART >= start) & (data$GFINDAT <= end | data$GINIART <= end)),]
data[which((data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GINIMUT == 3404),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
test<- data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GINIMUT == 3404),]
test
data[which(data$GINIMUT == 3404),]
any(test$GINIMUT == 3404)
summary(data$GFINDAT)
T | NA
NA | T
data[which((data$GFINDAT >= start | data$GINIDAT >= start) & (data$GFINDAT <= end | data$GINIDAT <= end)),]
library(swiTheme)
?multiplot
q1 <- qplot(1:10, 1:10, size = 10:1) + xlab("axis x label") + ylab ("y axis label") + theme_swi2()#
q2 <- qplot(mpg, data = mtcars, geom = "dotplot") + theme_swi()#
multiplot(list(q1, q2))
library(leaflet)
(m <- leaflet() %>% addTiles())
m %>% setView(lng = -1.5, lat = 53.4, zoom = 10) # set centre and extent of map
(m2 <- m %>%#
  setView(-1.5, 53.4, 10) %>% # map location#
  addMarkers(-1.4, 53.5) %>% # add a marker#
  addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup#
  # add som circles:#
  addCircles(color = "black", runif(90, -2, -1), runif(90, 53, 54), runif(90, 10, 500)))
library(leaflet)#
m = leaflet() %>% addTiles()
m
? addTiles
library(leaflet)#
m = leaflet() %>% addTiles()
m
m %>% setView(lng = -1.5, lat = 53.4, zoom = 10)
?leaflet
?leafletOutput
(m2 <- m %>%#
  setView(-1.5, 53.4, 10) %>% # map location#
  addMarkers(-1.4, 53.5) %>% # add a marker#
  addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup#
  # add som circles:#
  addCircles(color = "black", runif(90, -2, -1), runif(90, 53, 54), runif(90, 10, 500)))
? renderLeaflet
?leafletMap
?leafletOutput
?publish
publish
save
?save
m2
save(m2)
save(m2, "test")
save(m2, file = "test")
getwd()
? html_print
? toHTML
library(streamgraph)#
library(dplyr)#
ggplot2::movies %>%#
  select(year, Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%#
  tidyr::gather(genre, value, -year) %>%#
  group_by(year, genre) %>%#
  tally(wt=value) %>%#
  streamgraph("genre", "n", "year") %>%#
  sg_axis_x(20) %>%#
  sg_colors("PuOr") %>%#
  sg_legend(show=TRUE, label="Genres: ")
saveWidget
library(rgdal)#
library(leaflet)#
#
tmp <- tempdir()#
#
url <- "http://personal.tcu.edu/kylewalker/data/mexico.zip"#
#
file <- basename(url)#
#
download.file(url, file)#
#
unzip(file, exdir = tmp)#
#
mexico <- readOGR(dsn = tmp, layer = "mexico", encoding = "UTF-8")
library("swiTheme")#
library("swiRcharts")#
library("dplyr")#
library("rjson")#
#
#############################################################################################
###		SETTINGS	#
#############################################################################################
#
votefile <- "data/VOTEScsv_cleaned.csv"#
#
#############################################################################################
###		load initiative data	#
#############################################################################################
#
initiatives.read <- read.csv(votefile, check.names = F, stringsAsFactors = F, encoding = "latin1")#
#
# reverse order #
initiatives.read <- initiatives.read[rev(as.numeric(rownames(initiatives.read))),]#
#
# filter columns#
initiatives <- initiatives.read %>% select(`Date of Votes`, `Title in English`, `Title in German`, `Title in French`, `Title in Italien`, `Yes [%]`, `Theme codes`)#
# transform date to date#
initiatives$date <- as.Date(initiatives$`Date of Votes`)#
#
initiatives$year <- as.numeric(substr(initiatives$`Date of Votes`,1, 4))#
# add counter iniitiative per year #
initiatives <- do.call(rbind, by(initiatives, initiatives$year, function(ii) {#
	cbind(ii, n = nrow(ii):1)#
}))#
#############################################################################################
###		Plot#
#############################################################################################
#
## PLOT SETTINGS#
plot.height <- 350#
#
data <- initiatives %>% select (`Title in English`, `year`, `n`,  `Yes [%]`)#
colnames(data) <- c('name', 'y', 'x', 'value')#
#
a <- Highcharts$new()#
#
# use type='heatmap' for heat maps#
a$chart(zoomType = "x", type = 'heatmap', height = plot.height, plotBackgroundColor = "#f7f5ed", inverted = TRUE)#
a$series( data = rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),	  #
      list(0.5, '#999966'),#
      list(1, '#336666') #
  ))#
)#
#
# a$legend(align='right',#
#          layout='vertical',#
#          margin=0,#
#          verticalAlign='top',#
#          y=25,#
#          symbolHeight=plot.height)#
a$yAxis(max = max(data$y), ceiling = max(data$y), maxPadding = 0, tickAmount = 2, gridLineWidth =  0, minorGridLineWidth = 0, title = list(text = ""))#
#
a$xAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', labels = list(enabled = FALSE), #
	minorTickLength = 0, tickLength =  0)  	#
a$tooltip(formatter = "#! function() { return 'In <b>' + this.point.y + ',</b> the initative:<br><i>' + this.point.name +#
                    '</i><br>recolted <b>' + this.point.value + '%</b> of yes'; } !#")	 #
a$legend(enabled = F)#
a$addAssets(js =#
   c(#"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     # "https://code.highcharts.com/highcharts.js",#
     # "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
#
a$save(destfile = 'initiative.html')#
#
hChart2responsiveHTML("initiative.html", output.html = "initiative_heatmap.html", h2 = "Toutes les initiatives populaires suisses", descr = "",#
	source = "", h3 = "", author = "Duc-Quang Nguyen | swissinfo.ch")
library(swiRchart)
library(swiRcharts)
?hSeries
ibrary(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))#
#
# tweak the bubble plot#
a$chart(zoomType = "xy", type = "bubble")#
a$plotOptions(bubble = list(dataLabels = list(enabled = T, style = list(textShadow = 'none') ,#
color = '#aa8959', formatter = "#! function() { return this.point.name; } !#")))#
#
a$colors(swi_rpal)#
a$tooltip(formatter = "#! function() { return this.point.name + ':' +this.x + ', ' + this.y; } !#")#
a$xAxis(title = list(text = "important indicator", align = "high"), lineColor = list ('#FF0000'))#
a#
#
hChart.html <- tempfile("hchart_labelledBubble.html")#
a$save(hChart.html)
library(swiRchart)
library(swiRcharts)
?hSeries
library(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))
a$chart(zoomType = "xy", type = "bubble")#
a$plotOptions(bubble = list(dataLabels = list(enabled = T, style = list(textShadow = 'none') ,#
color = '#aa8959', formatter = "#! function() { return this.point.name; } !#")))#
#
a$colors(swi_rpal)#
a$tooltip(formatter = "#! function() { return this.point.name + ':' +this.x + ', ' + this.y; } !#")#
a$xAxis(title = list(text = "important indicator", align = "high"), lineColor = list ('#FF0000'))#
a#
#
hChart.html <- tempfile("hchart_labelledBubble.html")#
a$save(hChart.html)
hChart2responsiveHTML
library(swiRcharts)
?hSeries
library(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))
hSeries2 <- hSeries2(data.frame(x = x, y = y, z = z, color = color, name = name, series = series), "series")#
 b <- rCharts::Highcharts$new()#
b$series(hSeries2)
b
install.packages("readr")
install.package("devtools")
install.packages("devtools")
install.packages("rCharts")
install.packages("devtools")#
require(devtools)#
install_github('rCharts', 'ramnathv')#
library(rCharts)
install_github(ramnathv/rCharts)
1:2
rev(1:2)
library(rCharts)
set.seed(123134)#
y <- rnorm(20, 35, 4)#
y[7] <- NA#
y[13] <- NA#
y <- rbind(t(t(y)), t(t(rep(NA, 10))))#
fc <- rnorm(10, 35, 1)#
fc <- rbind(t(t(rep(NA,20))), t(t(fc)))#
uci <- rnorm(10, 38, 1)#
uci <- rbind(t(t(rep(NA,20))), t(t(uci)))#
lci <- rnorm(10, 32, 1)#
lci <- rbind(t(t(rep(NA,20))), t(t(lci)))#
plotData <- data.frame(y,fc,uci,lci)#
#
h1 <- Highcharts$new()#
h1$chart(type="line")#
h1$series(data=plotData$y, marker = list(symbol = 'circle'), connectNulls = TRUE)#
h1$series(data=plotData$fc, marker = list(symbol = 'circle'), connectNulls = TRUE)#
h1$series(data=plotData$uci, showInLegend = FALSE, marker = list(symbol = 'square'), connectNulls = TRUE)#
h1$series(data=plotData$lci, showInLegend = FALSE, marker = list(symbol = 'square'), connectNulls = TRUE)#
h1$series(data=rep(30,30), marker= list(enabled = FALSE))#
h1
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
library(WDI)#
library(countrycode)#
library(tidyr)#
library(dplyr)#
library(ggplot2)#
library(swiTheme)#
library(leaflet)#
#
#############################################################################################
###		Load UNHCR asylum seeker data#
#############################################################################################
#
dat.read <- read.csv("data/unhcr_popstats_export_time_series_2015_07_10_150142_refugees.csv", check.names = F, stringsAsFactors = F)#
#
dat.read <- rename(dat.read, country = `Country / territory of asylum/residence`)#
dat.read$Value <- as.numeric(dat.read$Value)#
#
###	Aggregate values by country (drop origin)#
dat <- dat.read %>% group_by(country) %>% summarise(total = sum(Value, na.rm = T)) %>% ungroup()#
###	Aggregate values by country and origin#
dat2 <- dat.read %>% group_by(country, `Population type`) %>% summarise(total = sum(Value, na.rm = T)) %>% ungroup()#
#
###	get the iso country code #
dat$iso2 <- countrycode(dat$country, "country.name", "iso2c")#
dat2$iso2 <- countrycode(dat2$country, "country.name", "iso2c")#
#
# discard VG, NR#
dat <- dat[!dat$iso2 %in% c('VG', 'NR'),]#
#
#############################################################################################
###		Get world bank indicators#
#############################################################################################
#
# GDP per capita, PPP (current international $) http://data.worldbank.org/indicator/NY.GDP.PCAP.PP.CD#
# Population, total http://data.worldbank.org/indicator/SP.POP.TOTL#
#
idw <- c('NY.GDP.PCAP.PP.CD', 'SP.POP.TOTL')#
#
getwbData <- function (ind, countries = dat$iso2) {#
	indicator <- WDI(indicator = ind, country = countries, start = 2008, end = 2015)#
	colnames(indicator)[3] <- 'values'#
	do.call(rbind, by(indicator, indicator$iso2c, function(ii) {#
		rowx <- !is.na(ii[,3])#
		if(all(!rowx)) {#
			ii[1,]#
		} else if (all(rowx)){#
			ii[which.max(ii$year),]#
		} else {#
			ii[which(rowx)[1],]#
		}#
	}))#
}#
#
gdp <- getwbData(idw[1], dat$iso2)#
pop <- getwbData(idw[2], dat$iso2)#
#
# combine indicators#
dat$totalParMillion <- round((dat$total / pop[match(dat$iso2, pop$iso2c),'values']) * 10^6)#
dat$totalParPIB <- round((dat$total / gdp[match(dat$iso2, gdp$iso2c),'values'] ), 1)#
#
#############################################################################################
###		MAP#
#############################################################################################
library(ggmap)#
library(leaflet)#
library(htmlwidgets)#
# Geocode every country (concatenate country name with iso2 code)#
latlon <- geocode(paste(dat$country, dat$iso2, sep = ", country="), output = c("latlon"), messaging = F)#
data <- cbind(dat, latlon)#
#
# remove parenthesis and rep. abbreviations#
naCountry <- gsub("Rep\\.", "Republic", gsub(" \\(.*\\)$", "", data[is.na(data$lat),'country']))#
latlon2 <- geocode(paste(naCountry,  data[is.na(data$lat),'iso2'], sep = ", country="),  output = c("latlon"), messaging = F)#
data[is.na(data$lat), c('lon', 'lat')] <- latlon2#
#
# remove lines with NA lat lon#
data <- data[!is.na(data$lat),]#
## Add back the number of asylum seeker and refugees#
# add asylum and refugees numbers#
tmp <- filter(dat2, `Population type` == "Asylum-seekers")#
data$asylumSeeker <- unlist(tmp[match(data$iso2, tmp$iso2), 'total'])#
tmp <- filter(dat2, `Population type` == "Refugees (incl. refugee-like situations)")#
data$refugees <- unlist(tmp[match(data$iso2, tmp$iso2), 'total'])#
# add PIB and GDP#
data$pop <- pop[match(data$iso2, pop$iso2c),'values']#
data$gdp <- round(gdp[match(data$iso2, gdp$iso2c),'values'])#
#
save(data, file = "prod/data/06_refugeesMap.Rdata")#
mb_tiles <- 'http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}'#
mb_attribution <- 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ'#
#
country_popup1 <- paste0('<p style=\"font-size:0.8em\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:0.8em\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) * 850, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) * 850, popup = country_popup1, group=groups[1]) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])#
saveWidget(n, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
sqrt(data$totalParMillion)
cbind(data, sqrt(data$totalParMillion))
cbind(data, sqrt(data$totalParMillion) * 850)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) * 800, popup = country_popup1, group=groups[1]) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
    radius = ~sqrt(totalParMillion) * 850, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
    radius = ~sqrt(totalParMillion), popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
    radius = ~sqrt(totalParMillion) / 100, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) / 10, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 10, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB), popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 5, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 3, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 8, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[1])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
?leaflet
library(leaflet)#
m = leaflet() %>% addTiles()#
m  # a map with the default OSM tile layer#
#
# set bounds#
m %>% fitBounds(0, 40, 10, 50)#
#
# move the center to Snedecor Hall#
m = m %>% setView(-93.65, 42.0285, zoom = 17)#
m#
#
# popup#
m %>% addPopups(-93.65, 42.0285, 'Here is the <b>Department of Statistics</b>, ISU')#
rand_lng = function(n = 10) rnorm(n, -93.65, .01)#
rand_lat = function(n = 10) rnorm(n, 42.0285, .01)#
#
# use automatic bounds derived from lng/lat data#
m = m %>% clearBounds()#
#
# popup#
m %>% addPopups(rand_lng(), rand_lat(), 'Random popups')#
#
# marker#
m %>% addMarkers(rand_lng(), rand_lat())#
m %>% addMarkers(#
  rand_lng(), rand_lat(), popup = paste('A random letter', sample(LETTERS, 10))#
)#
#
Rlogo = file.path(R.home('doc'), 'html', 'logo.jpg')#
m %>% addMarkers(#
  174.7690922, -36.8523071, icon = list(#
    iconUrl = Rlogo, iconSize = c(100, 76)#
  ), popup = 'R was born here!'#
)
mn
? addTiles
mn
?addTiles
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
mb_tiles <- 'http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}'#
mb_attribution <- 'swissinfo.ch | Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ'#
fontSize <- "0.9em"#
#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
mn
addLegend
? addLegend
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2]) %>% addLegend(position = "topleft", title = "asdfad")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2]) %>% addLegend(position = "topleft", title = "asdfad", colors = NULL)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2]) %>% addLegend(position = "topleft", title = "asdfad", colors = NULL, labels = NULL)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
fontSize <- "0.9em"#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
mapTitle <- "Réfugiés et demandeurs d'asile dans le monde"#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2]) %>% addLegend(position = "topleft", title = mapTitle, colors = NULL, labels = NULL)
mn
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
fontSize <- "0.9em"#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
mapTitle <- "Réfugiés et demandeurs d'asile dans le monde"#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2]) %>% addLegend(position = "topright", title = mapTitle, colors = NULL, labels = NULL)
mn
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, colors = NULL, labels = NULL) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
?addLegend
?addLayersControl
? layersControlOptions
?addLegend
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, colors = NULL, labels = "tests") %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, colors = "white", labels = "tests") %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = "tests") %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
fontSize <- "0.9em"#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
mapTitle <- "Total des réfugiés et demandeurs d'asile dans le monde en 2014"#
mapSubtitle <- "Choisissez d'exprimer ce total en fonction de la population ou du PIB par habitant."#
#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
mn
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
mb_tiles <- 'http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}'#
mb_attribution <- 'swissinfo.ch | Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ'#
#
fontSize <- "0.9em"#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
mapTitle <- "Total des réfugiés et demandeurs d'asile dans le monde en 2014"#
mapSubtitle <- "Exprimez ce total en fonction de la population ou du PIB par habitant ci-dessous."#
#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
# m <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1],#
#     radius = ~sqrt(totalParMillion) / 10, popup = country_popup1) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# n <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
# 	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7],#
#     radius = ~sqrt(totalParPIB) * 25000, popup = country_popup2) %>% setView(21.824312, 39.074208, zoom = 3)#
##
# saveWidget(m, file="map_byPop.html", selfcontained = FALSE, libdir = "leafletjs")#
# saveWidget(n, file="map_byGdp.html", selfcontained = FALSE, libdir = "leafletjs")#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       overlayGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
?addLayersControl
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
fontSize <- "0.9em"#
groups <- c("par million d'habitants", "par 1 USD du PIB par habitant")#
mapTitle <- "Total des réfugiés et demandeurs d'asile dans le monde en 2014"#
mapSubtitle <- "Exprimez ce total en fonction de la population ou du PIB par habitant ci-dessous."#
source <- "swissinfo.ch | source: UNHCR & The World Bank"#
mb_tiles <- 'http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}'#
mb_attribution <- paste0(source, '| Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ')#
country_popup1 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					  "Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					  "Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					  "Population", ": ", round(data$pop / 10^6, 2), " million <br><br>",#
					  "Nombre de réfugiés et demandeurs d'asile par million d'habitant: ", "<strong>", data$totalParMillion,#
					  "</strong></p>"#
					  )#
#
country_popup2 <- paste0('<p style=\"font-size:', fontSize, '\"><strong>', data$country, "</strong><br><br>",#
					"Nombre total de réfugiés: ", "<strong>",  data$refugees,"</strong><br>",#
					"Nombre total de demandeurs d'asile: ", "<strong>",  data$asylumSeeker,"</strong><br><br>",#
					"PIB par habitant (à parité de pouvoir d'achat)", ": ", data$gdp, " USD<br><br>",#
				  	"Nombre de réfugiés et demandeurs d'asile par 1 USD de PIB par habitant: ", "<strong>", data$totalParPIB,#
				  	"</strong></p>"#
				  )#
mn <- leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])#
saveWidget(mn, file="map_refugeesAsylum.html", selfcontained = FALSE, libdir = "leafletjs")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) * 1000, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~(totalParMillion) * 1000, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~(totalParMillion) * 10, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~(totalParMillion) * 5, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircles(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) * 1000, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_06_24_euroAsylum')
leaflet(data = data) %>% addTiles(urlTemplate = mb_tiles, attribution = mb_attribution) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[1], #
    radius = ~sqrt(totalParMillion) / 12, popup = country_popup1, group=groups[1]) %>%#
	addCircleMarkers(lng = ~lon, lat = ~lat, stroke = FALSE, fillOpacity = 0.4, fillColor = swi_rpal[7], #
    radius = ~sqrt(totalParPIB) * 2, popup = country_popup2, group=groups[2]) %>% #
	setView(21.824312, 39.074208, zoom = 3) %>%#
	addLegend(position = "topright", title = mapTitle, opacity = 0, colors = "white", labels = mapSubtitle) %>%#
    addLayersControl(#
       baseGroups = c(groups[1], groups[2]),#
       options = layersControlOptions(collapsed = FALSE)#
     ) %>% hideGroup(groups[2])
